1. OOP(Object Oriented Programming) : 객체를 기반으로하는 프로그래밍, 프로그램을 수많은 객체라
는 기본 단위로 나누고 객체를 만들어 이 객체들의 상호작용으로 서술하는 방식
2. Object : 클래스에서 정의한 것을 토대로 만들어지는 실체,객체
3. Class : 자료와 함수를 하나로 묶은 것, 프로그래밍에 필요한 데이터를 만들기 위해 추상화를 거쳐 집단
에 속하는 속성과 기능을 변수와 메소드로 정의한 것, 표현 대상들의 공통적인 특징을 작성
4. Abstract(추상화) : 공통된 속성이나 기능을 묶어 이름을 정의하는 것
5. Generalization(일반화) : 여러 객체들이 가진 공통된 특성을 부각시켜 하나의 개념이나 법칙으로 성립
시키는 과정 / Inheritance(상속) : 부모 역할의 개체가 자식 역할의 객체에게 자신이 가지고 있는 변수와
메소드를 물려주는 것
6. Specialization(구체적) : 일반화된 객체를 공통된 특성을 가진 여러 객체로 나누는 것
7. Realization : 추상화된 클래스를 인스턴스화 시키고 실체화 시키는 것
8. Association : 하나의 클래스가 다른 클래스와 참조, 확장 또는 상속에 의하여 연관되어 있는 것
9. Dependency : 객체들 관의 관계, 객체의 의존성, 어플리케이션은 수많은 객체들로 이루어지는데 
이 객체들은 독립적으로 기능을 수행하기보다는 서로 의존하여 어플리케이션의 기능을 구현한다.
10. Polymorphism : 하나의 속성이나 기능이 상황에 따라 다른 형태로 사용될 수 있는 특징
같은 속성이나 기능을 가지지만 객체에 따라서 다른 방식으로 사용될 수 있다.
11.Encapsulation/절차은익/정보은익: 속성과 기능들을 관련있는 것끼리 묶고, 외부에서 접근이 필요한 부
분은 제외하고 내부에 숨기는 것, 내부에서 객체가 어떻게 수행되는지 어떤 정보를 가지고있는지는 숨기고 
수행하는 인터페이스만을 제공하여 객체를 사용할 수 있게 한다.

UML(Unified Modeling Language)
URL(Uniform Resource Locator)
CSV(Comma Separated Value)
IDE(Integrated Development Environment)
API(Application Programming Interface)
Overloading : 한 클래스에서 메소드를 여러 형태로 재정의하여 사용하는것
OverRiding : 클래스들의 상속 관계에서 상위 클래스의 메소드를 하위 클래스에서 재정의하여 사용하는것
Wrapper Class : primitive data type -> Reference로 사용 가능
Sink Stream : Data를직접 주고받는 단순 입출력 stream (InputStream, OutputStream)
Filter Stream : Sink Stream을 통해 들어온 Data를 조작하는 stream (BufferedInputStream, ObjectInputStream)
직렬화(Serialization) : 객체를 스트림에 쓰기위해 연속적인 데이터로 변환하는 것

SQL(Structured Query Language)
DDL(Data Definition Language) : CREATE, DROP, ALTER
TCL(Transaction Control Language) : COMMIT, ROLLBACK
DML(Data Manipulation Language) : INSERT, DELETE, UPDATE
Query : SELECT

JDBC(Java DataBase Connectivity)

WebServer : 클라이언트의 요청을 받아 정적인 컨텐츠를 제공하는 서버
WAS(Web Application Server) : 웹서버와 웹컨테이너가 합쳐진 형태
Servlet(Server+Applet) : 클라이언트의 요청으로 동적인 웹페이지를 자바를 사용하여 구현하는 서버측 프로그램
JSP(Java Server Pages) : servlet의 단점을 보완하기 위해 만들어진 servlet기반의 스크립트 기술
DOM(Document Object Model) : document 구조
Model2WebArchitecture : MVC 패턴을 적용
Controller - Servlet, Model - Java Beans, View - JSP
El(Expression Language) : JSP의 표현식 대신 속성값을 쉽게 출력하기 위해 만들어진 Language
JSTL(JSP Standard Tag Library)
OGNL(Object-Graph Navigation Language) : 객체에 간결하게 접근할 수 있는 표현식

Framework : 프로그램을 개발할 때 공통적인 개발환경이나 개발에 필요한 화면 구현,알고리즘, db연동 등의 구조를 재사용이 가능한 형태로 제공하는 라이브러리
IOC(Inversion Of Control)

@Test : 코드의 테스트할 부분을 지정한다.

AOP(Aspect Oriented Programming) : 관점 지향 프로그래밍
핵심적인 관점과 부가적인 관점을 기준으로 나누고 그것을 기준으로 모듈화하여 프로그래밍하는 것
Core Concern(핵심 관심사) / Cross Cutting Concern(횡단 관심사)으로 나눠서 개발한다.
실행할 때 두가지를 합친 구현체를 만들어서 실행하는 방식
advice : 추가할 무엇 (cross cutting concern)
target object : 추가될 타겟(core concern)
join-point : advice 적용 지점
point-cut : join-point에 적용 rule
aspect(advisor) : advice + point-cut
weaving : advice와 target object를 합치는 것
proxy : 합쳐서 생성되는 프로그램
dynamic proxy : 직접 합치지 않고 runtime시 생성된다.
Transaction : DB의 상태를 변환시키는 과정을 수행하는 일련의 작업 단위
하나의 transaction이 끝나고 나서 commit을 실행한다.
transaction 처리 : sql문을 실행할 때마다 commit을 해주지 않고 한 작업인 transaction이 끝나고 나서 commit을 해주는 처리
ModelAndView : 정적인 부분을 모델링했다. ObjectScope에 저장하는 데이터와 navigation할 파일이름
ViewResolver : 동적인 부분을 모델링. setAttribute()와 forward같은 navigation하는 메소드

Interceptor
spring에서는 Controller에서의 login유무 확인과 같은 공통적인 처리를 Controller가 호출되기 전에 처리할 수 있게 해주는 Interceptor를 제공해준다.
web.servlet.HandlerIntercepter 인터페이스를 구현하면 되는데
모든 메소드를 구현하지 않게 하기 위해 구현해놓은 HandlerInterceptorAdapter를 확장해서 사용하면 된다.
preHandle() : Controller 호출 전처리
postHandler() : Controller 호출 후처리
afterCompletion() : view 생성 후 처리

REST(Representational State Transfer)란?
자원의 표현(이름)으로 구분하여 자원의 상태(정보)를 주고 받는 것으로
URI로 자원의 이름을 명시하고 Http메소드를 통해 CRUD를 실행하는 것을 의미하기도 한다.
주로 JSON을 이용하여 자원을 주고 받는다

JSON(JavaScript Object Notation)
자바스크립트에서 사용하는 객체 표현 규칙
key-value 형식의 데이터 포맷
JQuery : 자바스크립트의 작성을 간단하게 해주는 framework(library)

Ajax(Asynchronous JavaScript And Xml)
Ajax는 자바스크립트를 이용해서 비동기적인 방식으로 서버에 request를 할 때 데이터만 받아와서
페이지 이동없이 페이지를 변경할 수 있는 기술이다. 페이지를 다시 만들지 않고 일부분의 데이터만 바뀌어야 할 경우 사용할 수 있다.

$.ajax( [settings] )
ajax메소드 안에 설정들만 작성해주면 된다.
async : 비동기유무, default값이 true
method : GET이 default
dataType : default는 Intelligent Guess로 알아서 맞는 타입을 찾는다.(xml, json, script, html)
success : function( 서버에서 받은 data, status )
등 다양한 setting값을 줄 수 있다. 
$.ajax(), $.getJSON(), $.get(), $.post() 같이 여러가지 방법으로도 작성할 수 있다.
